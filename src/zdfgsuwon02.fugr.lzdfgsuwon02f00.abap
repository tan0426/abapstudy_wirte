*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZDHRV02_M.......................................*
FORM GET_DATA_ZDHRV02_M.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZDSUWONT02 WHERE
(VIM_WHERETAB) .
    CLEAR ZDHRV02_M .
ZDHRV02_M-MANDT =
ZDSUWONT02-MANDT .
ZDHRV02_M-ZEMPNO =
ZDSUWONT02-ZEMPNO .
ZDHRV02_M-ZEMPNM =
ZDSUWONT02-ZEMPNM .
ZDHRV02_M-ZGENDER =
ZDSUWONT02-ZGENDER .
ZDHRV02_M-ZDEPT =
ZDSUWONT02-ZDEPT .
ZDHRV02_M-ZSDATE =
ZDSUWONT02-ZSDATE .
ZDHRV02_M-ZFAMNO =
ZDSUWONT02-ZFAMNO .
ZDHRV02_M-ERDAT =
ZDSUWONT02-ERDAT .
ZDHRV02_M-ERZET =
ZDSUWONT02-ERZET .
ZDHRV02_M-ERNAM =
ZDSUWONT02-ERNAM .
ZDHRV02_M-AEDAT =
ZDSUWONT02-AEDAT .
ZDHRV02_M-AEZET =
ZDSUWONT02-AEZET .
ZDHRV02_M-AENAM =
ZDSUWONT02-AENAM .
<VIM_TOTAL_STRUC> = ZDHRV02_M.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZDHRV02_M .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZDHRV02_M.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZDHRV02_M-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZDSUWONT02 WHERE
  ZEMPNO = ZDHRV02_M-ZEMPNO .
    IF SY-SUBRC = 0.
    DELETE ZDSUWONT02 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZDSUWONT02 WHERE
  ZEMPNO = ZDHRV02_M-ZEMPNO .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZDSUWONT02.
    ENDIF.
ZDSUWONT02-MANDT =
ZDHRV02_M-MANDT .
ZDSUWONT02-ZEMPNO =
ZDHRV02_M-ZEMPNO .
ZDSUWONT02-ZEMPNM =
ZDHRV02_M-ZEMPNM .
ZDSUWONT02-ZGENDER =
ZDHRV02_M-ZGENDER .
ZDSUWONT02-ZDEPT =
ZDHRV02_M-ZDEPT .
ZDSUWONT02-ZSDATE =
ZDHRV02_M-ZSDATE .
ZDSUWONT02-ZFAMNO =
ZDHRV02_M-ZFAMNO .
ZDSUWONT02-ERDAT =
ZDHRV02_M-ERDAT .
ZDSUWONT02-ERZET =
ZDHRV02_M-ERZET .
ZDSUWONT02-ERNAM =
ZDHRV02_M-ERNAM .
ZDSUWONT02-AEDAT =
ZDHRV02_M-AEDAT .
ZDSUWONT02-AEZET =
ZDHRV02_M-AEZET .
ZDSUWONT02-AENAM =
ZDHRV02_M-AENAM .
    IF SY-SUBRC = 0.
    UPDATE ZDSUWONT02 ##WARN_OK.
    ELSE.
    INSERT ZDSUWONT02 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZDHRV02_M-UPD_FLAG,
STATUS_ZDHRV02_M-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZDHRV02_M.
  SELECT SINGLE * FROM ZDSUWONT02 WHERE
ZEMPNO = ZDHRV02_M-ZEMPNO .
ZDHRV02_M-MANDT =
ZDSUWONT02-MANDT .
ZDHRV02_M-ZEMPNO =
ZDSUWONT02-ZEMPNO .
ZDHRV02_M-ZEMPNM =
ZDSUWONT02-ZEMPNM .
ZDHRV02_M-ZGENDER =
ZDSUWONT02-ZGENDER .
ZDHRV02_M-ZDEPT =
ZDSUWONT02-ZDEPT .
ZDHRV02_M-ZSDATE =
ZDSUWONT02-ZSDATE .
ZDHRV02_M-ZFAMNO =
ZDSUWONT02-ZFAMNO .
ZDHRV02_M-ERDAT =
ZDSUWONT02-ERDAT .
ZDHRV02_M-ERZET =
ZDSUWONT02-ERZET .
ZDHRV02_M-ERNAM =
ZDSUWONT02-ERNAM .
ZDHRV02_M-AEDAT =
ZDSUWONT02-AEDAT .
ZDHRV02_M-AEZET =
ZDSUWONT02-AEZET .
ZDHRV02_M-AENAM =
ZDSUWONT02-AENAM .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZDHRV02_M USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZDHRV02_M-ZEMPNO TO
ZDSUWONT02-ZEMPNO .
MOVE ZDHRV02_M-MANDT TO
ZDSUWONT02-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZDSUWONT02'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZDSUWONT02 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZDSUWONT02'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZTESTV_02.......................................*
FORM GET_DATA_ZTESTV_02.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZDSUWONT02_2 WHERE
(VIM_WHERETAB) .
    CLEAR ZTESTV_02 .
ZTESTV_02-MANDT =
ZDSUWONT02_2-MANDT .
ZTESTV_02-ZEMPNO =
ZDSUWONT02_2-ZEMPNO .
ZTESTV_02-ZCERTCD =
ZDSUWONT02_2-ZCERTCD .
ZTESTV_02-ZGDATE =
ZDSUWONT02_2-ZGDATE .
    SELECT SINGLE * FROM ZDSUWONT02 WHERE
ZEMPNO = ZDSUWONT02_2-ZEMPNO .
    IF SY-SUBRC EQ 0.
ZTESTV_02-ZEMPNM =
ZDSUWONT02-ZEMPNM .
ZTESTV_02-ZGENDER =
ZDSUWONT02-ZGENDER .
ZTESTV_02-ZDEPT =
ZDSUWONT02-ZDEPT .
ZTESTV_02-ZSDATE =
ZDSUWONT02-ZSDATE .
    ENDIF.
    SELECT SINGLE * FROM ZDSUWONT02_4 WHERE
ZCERTCD = ZDSUWONT02_2-ZCERTCD .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = ZTESTV_02.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZTESTV_02 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZTESTV_02.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZTESTV_02-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZDSUWONT02_2 WHERE
  ZEMPNO = ZTESTV_02-ZEMPNO AND
  ZCERTCD = ZTESTV_02-ZCERTCD .
    IF SY-SUBRC = 0.
    DELETE ZDSUWONT02_2 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZDSUWONT02_2 WHERE
  ZEMPNO = ZTESTV_02-ZEMPNO AND
  ZCERTCD = ZTESTV_02-ZCERTCD .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZDSUWONT02_2.
    ENDIF.
ZDSUWONT02_2-MANDT =
ZTESTV_02-MANDT .
ZDSUWONT02_2-ZEMPNO =
ZTESTV_02-ZEMPNO .
ZDSUWONT02_2-ZCERTCD =
ZTESTV_02-ZCERTCD .
ZDSUWONT02_2-ZGDATE =
ZTESTV_02-ZGDATE .
    IF SY-SUBRC = 0.
    UPDATE ZDSUWONT02_2 ##WARN_OK.
    ELSE.
    INSERT ZDSUWONT02_2 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZTESTV_02-UPD_FLAG,
STATUS_ZTESTV_02-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZTESTV_02.
  SELECT SINGLE * FROM ZDSUWONT02_2 WHERE
ZEMPNO = ZTESTV_02-ZEMPNO AND
ZCERTCD = ZTESTV_02-ZCERTCD .
ZTESTV_02-MANDT =
ZDSUWONT02_2-MANDT .
ZTESTV_02-ZEMPNO =
ZDSUWONT02_2-ZEMPNO .
ZTESTV_02-ZCERTCD =
ZDSUWONT02_2-ZCERTCD .
ZTESTV_02-ZGDATE =
ZDSUWONT02_2-ZGDATE .
    SELECT SINGLE * FROM ZDSUWONT02 WHERE
ZEMPNO = ZDSUWONT02_2-ZEMPNO .
    IF SY-SUBRC EQ 0.
ZTESTV_02-ZEMPNM =
ZDSUWONT02-ZEMPNM .
ZTESTV_02-ZGENDER =
ZDSUWONT02-ZGENDER .
ZTESTV_02-ZDEPT =
ZDSUWONT02-ZDEPT .
ZTESTV_02-ZSDATE =
ZDSUWONT02-ZSDATE .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZTESTV_02-ZEMPNM .
      CLEAR ZTESTV_02-ZGENDER .
      CLEAR ZTESTV_02-ZDEPT .
      CLEAR ZTESTV_02-ZSDATE .
    ENDIF.
    SELECT SINGLE * FROM ZDSUWONT02_4 WHERE
ZCERTCD = ZDSUWONT02_2-ZCERTCD .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZTESTV_02 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZTESTV_02-ZEMPNO TO
ZDSUWONT02_2-ZEMPNO .
MOVE ZTESTV_02-ZCERTCD TO
ZDSUWONT02_2-ZCERTCD .
MOVE ZTESTV_02-MANDT TO
ZDSUWONT02_2-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZDSUWONT02_2'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZDSUWONT02_2 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZDSUWONT02_2'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZTESTV_02 USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZDSUWONT02_2-MANDT =
ZTESTV_02-MANDT .
ZDSUWONT02_2-ZEMPNO =
ZTESTV_02-ZEMPNO .
ZDSUWONT02_2-ZCERTCD =
ZTESTV_02-ZCERTCD .
ZDSUWONT02_2-ZGDATE =
ZTESTV_02-ZGDATE .
    SELECT SINGLE * FROM ZDSUWONT02 WHERE
ZEMPNO = ZDSUWONT02_2-ZEMPNO .
    IF SY-SUBRC EQ 0.
ZTESTV_02-ZEMPNM =
ZDSUWONT02-ZEMPNM .
ZTESTV_02-ZGENDER =
ZDSUWONT02-ZGENDER .
ZTESTV_02-ZDEPT =
ZDSUWONT02-ZDEPT .
ZTESTV_02-ZSDATE =
ZDSUWONT02-ZSDATE .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZTESTV_02-ZEMPNM .
      CLEAR ZTESTV_02-ZGENDER .
      CLEAR ZTESTV_02-ZDEPT .
      CLEAR ZTESTV_02-ZSDATE .
    ENDIF.
    SELECT SINGLE * FROM ZDSUWONT02_4 WHERE
ZCERTCD = ZDSUWONT02_2-ZCERTCD .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
